name: 'Lint'
description: 'Lint code'
inputs:
  org_github_token:
    description: 'Github org token'
    required: false
  python-version:
    description: 'Python version'
    required: true
  pypi-user:
    description: 'PyPi user'
    required: true
  pypi-password:
    description: 'PyPi password'
    required: true

runs:
  using: "composite"
  steps:
    ## Clone do c√≥digo
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install and configure Pre-commit
      env:
        PYPI_USER: ${{ inputs.pypi-user }}
        PYPI_PASSWORD: ${{ inputs.pypi-password }}
      shell: bash
      run: |
        pip install pre-commit pylint pylint-django pylint-plugin-utils pylint-pydantic
        pip install poetry
        poetry config virtualenvs.create false
        poetry config http-basic.zapay-pypi $PYPI_USER $PYPI_PASSWORD
        poetry install --no-interaction --no-ansi -vvv --all-extras
    - name: Cache pre commit hooks
      uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}-${{ hashFiles('.github/workflows/lint.yml') }}
    - name: Cache mypy types
      uses: actions/cache@v3
      with:
        path: .mypy_cache
        key: ${{ runner.os }}-mypy-${{ hashFiles('.pre-commit-config.yaml') }}-${{ hashFiles('mypy.ini') }}
    - name: Run Pre-commit
      shell: bash
      run: |
        pre-commit run --from-ref origin/${{ github.event.pull_request.base.ref }} --to-ref HEAD
